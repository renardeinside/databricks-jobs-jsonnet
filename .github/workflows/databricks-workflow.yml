# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: databricks-launch

on: push

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install Databricks CLI
        run: python -m pip install databricks-cli

      - name: Check clusters list
        run: databricks clusters list

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache maven deps
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build jars
        run: mvn -B package --file pom.xml

      - name: Upload jars to DBFS
        run: databricks fs cp target/databricks-jobs-jsonnet-1.0-SNAPSHOT-jar-with-dependencies.jar dbfs:/mnt/jars/first-job.jar

      - name: Create First Job
        run: databricks jobs create --json-file=src/main/resources/live-conf.json >> /tmp/job_id.json

      - name: Run First Job
        run: |
          DB_JOB_ID=$(cat /tmp/job_id.json | jq -r '.job_id')
          databricks jobs run-now --job-id $DB_JOB_ID

